(function($){$.fn.addClass=function(origAddClass){return function(classNames){classNames=classNames||'';return this.each(function(){if($.svg.isSVGElem(this)){var node=this;$.each(classNames.split(/\s+/),function(i,className){var classes=(node.className?node.className.baseVal:node.getAttribute('class'));if($.inArray(className,classes.split(/\s+/))==-1){classes+=(classes?' ':'')+className;(node.className?node.className.baseVal=classes:node.setAttribute('class',classes));}});}
else{origAddClass.apply($(this),[classNames]);}});};}($.fn.addClass);$.fn.removeClass=function(origRemoveClass){return function(classNames){classNames=classNames||'';return this.each(function(){if($.svg.isSVGElem(this)){var node=this;$.each(classNames.split(/\s+/),function(i,className){var classes=(node.className?node.className.baseVal:node.getAttribute('class'));classes=$.grep(classes.split(/\s+/),function(n,i){return n!=className;}).join(' ');(node.className?node.className.baseVal=classes:node.setAttribute('class',classes));});}
else{origRemoveClass.apply($(this),[classNames]);}});};}($.fn.removeClass);$.fn.toggleClass=function(origToggleClass){return function(className,state){return this.each(function(){if($.svg.isSVGElem(this)){if(typeof state!=='boolean'){state=!$(this).hasClass(className);}
$(this)[(state?'add':'remove')+'Class'](className);}
else{origToggleClass.apply($(this),[className,state]);}});};}($.fn.toggleClass);$.fn.hasClass=function(origHasClass){return function(className){className=className||'';var found=false;this.each(function(){if($.svg.isSVGElem(this)){var classes=(this.className?this.className.baseVal:this.getAttribute('class')).split(/\s+/);found=($.inArray(className,classes)>-1);}
else{found=(origHasClass.apply($(this),[className]));}
return!found;});return found;};}($.fn.hasClass);$.fn.attr=function(origAttr){return function(name,value,type){if(typeof name==='string'&&value===undefined){var val=origAttr.apply(this,[name]);if(val&&val.baseVal&&val.baseVal.numberOfItems!=null){value='';val=val.baseVal;if(name=='transform'){for(var i=0;i<val.numberOfItems;i++){var item=val.getItem(i);switch(item.type){case 1:value+=' matrix('+item.matrix.a+','+item.matrix.b+','+
item.matrix.c+','+item.matrix.d+','+
item.matrix.e+','+item.matrix.f+')';break;case 2:value+=' translate('+item.matrix.e+','+item.matrix.f+')';break;case 3:value+=' scale('+item.matrix.a+','+item.matrix.d+')';break;case 4:value+=' rotate('+item.angle+')';break;case 5:value+=' skewX('+item.angle+')';break;case 6:value+=' skewY('+item.angle+')';break;}}
val=value.substring(1);}
else{val=val.getItem(0).valueAsString;}}
return(val&&val.baseVal?val.baseVal.valueAsString:val);}
var options=name;if(typeof name==='string'){options={};options[name]=value;}
return this.each(function(){if($.svg.isSVGElem(this)){for(var n in options){var val=($.isFunction(options[n])?options[n]():options[n]);(type?this.style[n]=val:this.setAttribute(n,val));}}
else{origAttr.apply($(this),[name,value,type]);}});};}($.fn.attr);$.fn.removeAttr=function(origRemoveAttr){return function(name){return this.each(function(){if($.svg.isSVGElem(this)){(this[name]&&this[name].baseVal?this[name].baseVal.value='':this.setAttribute(name,''));}
else{origRemoveAttr.apply($(this),[name]);}});};}($.fn.removeAttr);$.extend($.cssNumber,{'stopOpacity':true,'strokeMitrelimit':true,'strokeOpacity':true});if($.cssProps){$.css=function(origCSS){return function(elem,name,extra){var value=(name.match(/^svg.*/)?$(elem).attr($.cssProps[name]||name):'');return value||origCSS(elem,name,extra);};}($.css);}
function anySVG(checkSet){for(var i=0;i<checkSet.length;i++){if(checkSet[i].nodeType==1&&checkSet[i].namespaceURI==$.svg.svgNS){return true;}}
return false;}})(jQuery);